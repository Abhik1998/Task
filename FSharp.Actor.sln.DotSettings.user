<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=DDC4EC484E0949949E57A8F81190E7CD/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=DDC4EC484E0949949E57A8F81190E7CD/Name/@EntryValue">Given a trie</s:String>
	<s:String x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=DDC4EC484E0949949E57A8F81190E7CD/XmlSerializedElements/@EntryValue">&lt;Session&gt;&lt;Elements&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.Given a trie" type="NUnitTestFixtureElement" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Actor Path" type="NUnitTestFixtureElement" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Local Registry" type="NUnitTestFixtureElement" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.Given a trie.I can add a value to an empty trie" ParentId="FSharp.Actor.Tests.Given a trie" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.Given a trie" MethodName="I can add a value to an empty trie" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.Given a trie.I can add a wildcard into a trie key" ParentId="FSharp.Actor.Tests.Given a trie" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.Given a trie" MethodName="I can add a wildcard into a trie key" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.Given a trie.I can add different values with a different root" ParentId="FSharp.Actor.Tests.Given a trie" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.Given a trie" MethodName="I can add different values with a different root" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.Given a trie.I can add different values with the same root" ParentId="FSharp.Actor.Tests.Given a trie" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.Given a trie" MethodName="I can add different values with the same root" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Actor Path.I can build an actor path and detect correct hostname and type DNS" ParentId="FSharp.Actor.Tests.With Actor Path" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Actor Path" MethodName="I can build an actor path and detect correct hostname and type DNS" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Actor Path.I can build an actor path and detect correct hostname and type IPV4" ParentId="FSharp.Actor.Tests.With Actor Path" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Actor Path" MethodName="I can build an actor path and detect correct hostname and type IPV4" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Actor Path.I can build an actor path from a realtive uri" ParentId="FSharp.Actor.Tests.With Actor Path" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Actor Path" MethodName="I can build an actor path from a realtive uri" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Actor Path.I can build an actor path from a realtive uri with a system" ParentId="FSharp.Actor.Tests.With Actor Path" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Actor Path" MethodName="I can build an actor path from a realtive uri with a system" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Actor Path.I can build an actor path from an absolute uri" ParentId="FSharp.Actor.Tests.With Actor Path" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Actor Path" MethodName="I can build an actor path from an absolute uri" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Actor Path.I can build an actor path with wildcards on everything but path component" ParentId="FSharp.Actor.Tests.With Actor Path" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Actor Path" MethodName="I can build an actor path with wildcards on everything but path component" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Actor Path.I can build an actor path with wildcards on everything but path component and system" ParentId="FSharp.Actor.Tests.With Actor Path" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Actor Path" MethodName="I can build an actor path with wildcards on everything but path component and system" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Actor Path.I can build an actor path with wildcards on everything but path component and transport" ParentId="FSharp.Actor.Tests.With Actor Path" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Actor Path" MethodName="I can build an actor path with wildcards on everything but path component and transport" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.Given a trie.I can create an empty one" ParentId="FSharp.Actor.Tests.Given a trie" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.Given a trie" MethodName="I can create an empty one" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Actor Path.I can rebase with a defined system in original path" ParentId="FSharp.Actor.Tests.With Actor Path" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Actor Path" MethodName="I can rebase with a defined system in original path" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Local Registry.I can register and resolve an actor with full URI" ParentId="FSharp.Actor.Tests.With Local Registry" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Local Registry" MethodName="I can register and resolve an actor with full URI" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Local Registry.I can register and resolve an actor with only path" ParentId="FSharp.Actor.Tests.With Local Registry" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Local Registry" MethodName="I can register and resolve an actor with only path" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.Given a trie.I can remove a value from a trie" ParentId="FSharp.Actor.Tests.Given a trie" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.Given a trie" MethodName="I can remove a value from a trie" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.Given a trie.I can retrieve a leaf node it should have just its value" ParentId="FSharp.Actor.Tests.Given a trie" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.Given a trie" MethodName="I can retrieve a leaf node it should have just its value" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.Given a trie.I can retrieve a node with its children" ParentId="FSharp.Actor.Tests.Given a trie" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.Given a trie" MethodName="I can retrieve a node with its children" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.Given a trie.I can retrieve from a trie with mutiple roots" ParentId="FSharp.Actor.Tests.Given a trie" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.Given a trie" MethodName="I can retrieve from a trie with mutiple roots" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.Given a trie.I can retrieve from a trie with mutiple roots and get the other key" ParentId="FSharp.Actor.Tests.Given a trie" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.Given a trie" MethodName="I can retrieve from a trie with mutiple roots and get the other key" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Actor Path.I should be able to get the components of an actor path" ParentId="FSharp.Actor.Tests.With Actor Path" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Actor Path" MethodName="I should be able to get the components of an actor path" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;UnitTestElement Provider="nUnit" Id="FSharp.Actor.Tests.With Actor Path.Should stay unchanged when a realtive URI is used to rebase" ParentId="FSharp.Actor.Tests.With Actor Path" type="NUnitTestElement" TypeName="FSharp.Actor.Tests.With Actor Path" MethodName="Should stay unchanged when a realtive URI is used to rebase" Project="A20060EC-E820-4ED1-A871-537914C10183" /&gt;&lt;/Elements&gt;&lt;/Session&gt;</s:String></wpf:ResourceDictionary>