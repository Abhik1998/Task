<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>FSharp.Actor</name></assembly>
<members>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.Actor">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.ActorConfiguration">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.ActorHostRemotingExtensions">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.ActorPath">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.ActorRef">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.ActorRefOperations">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.ActorSelection">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.ActorSelectionOperators">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.AsyncExtensions.AsyncHelpers">

</member>
<member name="T:FSharp.Actor.AsyncExtensions">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.Helpers.Option">

</member>
<member name="T:FSharp.Actor.Helpers">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:FSharp.Actor.Log.ILogger.Log(FSharp.Actor.Log.LogLevel,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,FSharp.Actor.Log.LogLine})">
<summary>
 log - evaluate the function if the log level matches - by making it
 a function we don&apos;t needlessly need to evaluate it
 Calls to this method must be thread-safe and not change any state
</summary>
</member>
<member name="T:FSharp.Actor.Log.ILogger">
<summary>
 The primary ILogger abstraction that you can log data into
</summary>
</member>
<member name="F:FSharp.Actor.Log.LogLine.ts_utc_ticks">
<summary>
 timestamp when this log line was created
</summary>
</member>
<member name="F:FSharp.Actor.Log.LogLine.exception">
<summary>
 an optional exception
</summary>
</member>
<member name="F:FSharp.Actor.Log.LogLine.message">
<summary>
 the message that the application wants to log
</summary>
</member>
<member name="F:FSharp.Actor.Log.LogLine.path">
<summary>
 the source of the log line, e.g. &apos;ModuleName.FunctionName&apos;
</summary>
</member>
<member name="F:FSharp.Actor.Log.LogLine.level">
<summary>
 the level that this log line has
</summary>
</member>
<member name="F:FSharp.Actor.Log.LogLine.trace">
<summary>
 the trace id and span id
 If using tracing, then this LogLine is an annotation to a
 span instead of a &apos;pure&apos; log entry
</summary>
</member>
<member name="T:FSharp.Actor.Log.LogLine">
<summary>
 When logging, write a log line like this with the source of your
 log line as well as a message and an optional exception.
</summary>
</member>
<member name="F:FSharp.Actor.Log.TraceHeader.req_parent_id">
<summary>
 possibly a parent
 In ZipKin/Dapper-speak, this is the span parent id
</summary>
</member>
<member name="F:FSharp.Actor.Log.TraceHeader.req_id">
<summary>
 the request id assigned when suave received the http request
 In ZipKin/Dapper-speak, this is the span id
</summary>
</member>
<member name="F:FSharp.Actor.Log.TraceHeader.trace_id">
<summary>
 if this is the &apos;first&apos; traced request, then trace_id equals
 req_id. If it&apos;s the second, then trace_id = req_parent_id
 or otherwise third or later then trace_id, req_id and req_parent_id
 are all disjunct
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.Log.TraceHeader">
<summary>
 A record that keeps track of what request this is.
 In an uint64 there are 18 446 744 073 709 551 616 number
 of possible values, so you can be fairly certain a given request
 id is unique, given a good random number generator.
</summary>
</member>
<member name="T:FSharp.Actor.Log.LogLevel.Fatal">
<summary>
 The least verbose level. Will only pass through fatal
 log lines that cause the application to crash or become
 unusable.
</summary>
</member>
<member name="T:FSharp.Actor.Log.LogLevel.Error">
<summary>
 Less verbose than Warn, more verbose than Fatal
</summary>
</member>
<member name="T:FSharp.Actor.Log.LogLevel.Warn">
<summary>
 Less verbose than Info, more verbose than Error
</summary>
</member>
<member name="T:FSharp.Actor.Log.LogLevel.Info">
<summary>
 Less verbose than Debug, more verbose than Warn
</summary>
</member>
<member name="T:FSharp.Actor.Log.LogLevel.Debug">
<summary>
 Less verbose than Verbose, more verbose than Info
</summary>
</member>
<member name="T:FSharp.Actor.Log.LogLevel.Verbose">
<summary>
 The most verbose log level, more verbose than Debug.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:FSharp.Actor.Log.LogLevel.ToString">
<summary>
 Convert the LogLevel to a string
</summary>
</member>
<member name="M:FSharp.Actor.Log.LogLevel.ToInt">
<summary>
 Turn the LogLevel into an integer
</summary>
</member>
<member name="">

</member>
<member name="M:FSharp.Actor.Log.LogLevel.FromString(System.String)">
<summary>
 Converts the string passed to a Loglevel.
</summary>
</member>
<member name="M:FSharp.Actor.Log.LogLevel.FromInt(System.Int32)">
<summary>
 Turn an integer into a LogLevel
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.Log.LogLevel">
<summary>
 The log levels specify the severity of the message.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.Log.Loggers.ConsoleWindowLogger">
<summary>
 Log a line with the given format, printing the current time in UTC ISO-8601 format
 and then the string, like such:
 &apos;2013-10-13T13:03:50.2950037Z: today is the day&apos;
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.Log.Loggers.CombiningLogger">
<summary>
 A ILogger to use for combining a number of other Loggers
</summary>
</member>
<member name="M:FSharp.Actor.Log.Loggers.default_formatter(FSharp.Actor.Log.LogLine)">
<summary>
 let the ISO8601 love flow
</summary>
</member>
<member name="T:FSharp.Actor.Log.Loggers">

</member>
<member name="T:FSharp.Actor.Log">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.LoggingGlobals">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.Net">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.SystemNetExtensions">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:FSharp.Actor.Trie">

</member>
<member name="">

</member>
<member name="T:System.AssemblyVersionInformation">

</member>
</members>
</doc>
